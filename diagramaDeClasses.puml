@startuml classes

class Orquestrador{
    - DecodificadorTexto
    - ControladorMusical
    + orquestra( String , Boolean)
    + definirInstrumento(String)
}

abstract Interface{
    +getTexto():String
    +abrirGerenciadorDeArquivos()
    -checkBoxMarcada():Boolean
    -getArquivoDeTexto()
}

class LeitorDeArquivo{
    + getCaminhoDoArquivo():String
    + getTemArquivo(): Boolean
    + getConteudoDoArquivo():String
}

class ControladorDeGui{
    + executa()
}

class DecodificadorTexto{
    + traduzTexto(String):Musica
}

interface TradutorTextoComando{
    + traduz(String):comando
    + defineUltimoCaracter(Character );
}

class TradutorTextoParaComando implements TradutorTextoComando{}

class ControladorMusical{
    + executaMusica(Musica,Boolean)
    + defineInstrumento(Musica)
}

interface AdaptadorMusical{
    + adicionaNota(Comando)
    + adicionaNota(Comando, int)
    + tocaMusica()
    + aumentarOitava()
    + aumentarVolume()
    + defineInstrumento(Comando)
    + incrementaInstrumento(int)
    + limpaMusica()
    + salvaMusica()
}

class AdaptadorJFugue implements AdaptadorMusical{
    - instrumentoAtual
    - volumeAtual
    - oitavaAtual
    - patternCriado
}

class JFugueDownloader{
    + salvarMusica()
}

interface TradutorAdaptador{
    + traduzParaAdaptador(Comando):String
}

class TradutorJFugue implements TradutorAdaptador{

}

enum Comando{
    + DO
    + RE
    + MI
    + FA
    + SOL
    + LA
    + SI
    ...
}

class Musica{
    - sequenciaDeVisaoDeComando
    + getSequenciaDeVisaoDeComandos():List<VisaoDeComando>
    + setSequenciaDeVisaoDeComandos(List<VisaoDeComando>)
    + addVisaoDeComando(VisaoDeComando)
}

class VisaoDeComando{
    - Comando
    - Repeticoes
    + setRepeticoes(int)
    + incRepeticoes()
}

class ValidadorDeComando{
    + eNota(Comando):Boolean
    + eComandoDeVolume(Comando):Boolean
    + eComandoDeBPM(Comando):Boolean
    + eComandoDeOitava(Comando):Boolean
    + eComandoDeInstrumento(Comando):Boolean
}

Interface <|-- ControladorDeGui
Interface -> LeitorDeArquivo
ControladorDeGui --> Orquestrador
AdaptadorJFugue --> JFugueDownloader
Orquestrador --> ControladorMusical
Orquestrador --> DecodificadorTexto
DecodificadorTexto --> TradutorTextoComando
DecodificadorTexto --> Musica
ControladorMusical --> AdaptadorMusical
ControladorMusical ..> ValidadorDeComando
TradutorTextoComando --> Comando
AdaptadorJFugue --> TradutorAdaptador
Musica --> VisaoDeComando


@enduml