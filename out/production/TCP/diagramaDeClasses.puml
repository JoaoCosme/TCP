@startuml classes

class Orquestrador{
    + orquestrar()
}

class ControladorDeGui{
    - estadoGui
    + entraTexto():String
    + abrir()
    + fechar()
}

enum estadoGui{
    + Standby
    + ProcessandoMusica
}

class DecodificadorTexto{
    + traduzTexto(String):Musica
}

class TradutorTextoComando{
    + traduz(String):comando
}

interface AdaptadorMusical{
    + tocarNota()
    + aumentarOitava()
    + reduzirOitava()
    + aumentarVolume()
    + reduzirVolume()
}

class AdaptadorJFugue implements AdaptadorMusical{
    - BPM
    - Oitava
    - Volume
    - Instrumento
}

enum Instrumento{
    - bateria
    - piano
    - guiatarra
}

enum comando{
    + do
    + re
    + mi
    + fa
    + sol
    + la
    + si
    ...
}

class Musica{
    - sequenciaDeComandos
}

class TocadorDeMusica{
    + toca( Musica )
}

Orquestrador --> DecodificadorTexto
Orquestrador --> TocadorDeMusica
Orquestrador --> ControladorDeGui
DecodificadorTexto --> TradutorTextoComando
DecodificadorTexto --> Musica
TocadorDeMusica --> AdaptadorMusical
TradutorTextoComando --> comando
ControladorDeGui --> estadoGui
AdaptadorJFugue --> Instrumento


@enduml